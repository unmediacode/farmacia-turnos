---
import BaseLayout from '@/layouts/BaseLayout.astro';
import CalendarWeek from '@/components/CalendarWeek.astro';
import type { Appointment } from '@/lib/types';
import {
  buildRemainingWorkWeeks,
  buildWorkWeek,
  dayjs,
  formatHuman
} from '@/lib/utils/date';
import weekModalScript from '../scripts/week-modal.ts?url';

const selectedDate = Astro.url.searchParams.get('d') ?? dayjs().format('YYYY-MM-DD');
const workWeek = buildWorkWeek(selectedDate);
const remainingWeeks = buildRemainingWorkWeeks(selectedDate);
const weeksToRender = remainingWeeks.length > 0 ? remainingWeeks : [workWeek];

async function fetchDay(date: string): Promise<Appointment[]> {
  const endpoint = new URL(`/api/appointments`, Astro.url.origin);
  endpoint.searchParams.set('day', date);
  const response = await fetch(endpoint, { headers: { accept: 'application/json' }, cache: 'no-store' });
  if (!response.ok) return [];
  return (await response.json()) as Appointment[];
}

const uniqueDays = Array.from(new Set(weeksToRender.flat()));
const appointmentsEntries = await Promise.all(
  uniqueDays.map(async (date) => [date, await fetchDay(date)] as const)
);
const appointmentsByDay = Object.fromEntries(appointmentsEntries) as Record<string, Appointment[]>;

type WeekBundle = {
  dates: string[];
  start: string;
  end: string;
  data: Record<string, Appointment[]>;
};

const weekBundles: WeekBundle[] = weeksToRender.map((weekDates) => {
  const data = Object.fromEntries(
    weekDates.map((date) => [date, appointmentsByDay[date] ?? []])
  ) as Record<string, Appointment[]>;
  return {
    dates: weekDates,
    start: weekDates[0],
    end: weekDates[weekDates.length - 1],
    data
  };
});

const weekStart = weekBundles[0]?.start ?? workWeek[0];
const weekEnd = weekBundles.at(-1)?.end ?? workWeek[workWeek.length - 1];
const previousWeek = dayjs(weekStart).subtract(7, 'day').format('YYYY-MM-DD');
const nextWeek = dayjs(weekStart).add(7, 'day').format('YYYY-MM-DD');
const monthLabel = dayjs(selectedDate).startOf('month').format('MMMM YYYY');
---
<BaseLayout title="Calendario semanal">
  <div class="mb-4 flex items-center justify-between print:mb-2">
    <div>
      <h1 class="text-2xl font-bold print:text-base">Semanas restantes de {monthLabel}</h1>
      <p class="text-sm text-slate-500">
        Del {formatHuman(weekStart)} al {formatHuman(weekEnd)}
      </p>
    </div>
    <nav class="flex gap-2 print:hidden" aria-label="Cambiar semana">
      <a class="btn-outline" href={`/semana?d=${previousWeek}`}>Anterior</a>
      <a class="btn-outline" href={`/semana?d=${nextWeek}`}>Siguiente</a>
    </nav>
  </div>

  <div class="space-y-8">
    {weekBundles.map((week) => (
      <section class="space-y-3" aria-label={`Semana del ${formatHuman(week.start)} al ${formatHuman(week.end)}`}>
        <header class="flex items-center justify-between">
          <h2 class="text-lg font-semibold">
            Semana del {formatHuman(week.start)} al {formatHuman(week.end)}
          </h2>
          <span class="text-sm text-slate-500">{week.dates.length} días laborables</span>
        </header>
        <CalendarWeek dateKey={week.start} data={week.data} />
      </section>
    ))}
  </div>

  <div
    id="appointment-modal"
    class="fixed inset-0 z-50 hidden items-center justify-center bg-black/40 p-4"
    role="dialog"
    aria-modal="true"
    aria-labelledby="appointment-modal-title"
  >
    <div class="w-full max-w-lg rounded-lg bg-white p-6 shadow-xl dark:bg-slate-900">
      <form id="appointment-form" class="flex flex-col gap-4" novalidate>
        <div class="flex items-center justify-between">
          <h2 id="appointment-modal-title" class="text-lg font-semibold">Añadir cliente</h2>
          <button type="button" class="btn-icon" data-cancel aria-label="Cerrar">
            <svg
              aria-hidden="true"
              viewBox="0 0 20 20"
              fill="none"
              stroke="currentColor"
              stroke-width="1.5"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <path d="M5 5l10 10" />
              <path d="M15 5l-10 10" />
            </svg>
          </button>
        </div>

        <div class="grid gap-3">
          <label class="flex flex-col gap-1 text-sm" for="name-input">
            <span>Nombre *</span>
            <input
              id="name-input"
              name="name"
              required
              type="text"
              inputmode="text"
              autocomplete="name"
              placeholder="Nombre del cliente"
              class="rounded-md border border-slate-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-brand-500 dark:border-slate-700 dark:bg-slate-800"
            />
          </label>

          <label class="flex flex-col gap-1 text-sm" for="phone-input">
            <span>Teléfono</span>
            <input
              id="phone-input"
              name="phone"
              type="tel"
              inputmode="tel"
              autocomplete="tel"
              placeholder="Teléfono (opcional)"
              class="rounded-md border border-slate-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-brand-500 dark:border-slate-700 dark:bg-slate-800"
            />
          </label>

          <label class="flex flex-col gap-1 text-sm" for="notes-input">
            <span>Notas</span>
            <textarea
              id="notes-input"
              name="notes"
              rows="2"
              placeholder="Notas (opcional)"
              class="rounded-md border border-slate-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-brand-500 dark:border-slate-700 dark:bg-slate-800"
            ></textarea>
          </label>
        </div>

        <div class="rounded-lg border border-slate-200 p-3 dark:border-slate-700">
          <div class="mb-2 flex items-center justify-between">
            <button type="button" class="btn-icon" data-cal-prev aria-label="Mes anterior">
              <svg
                aria-hidden="true"
                viewBox="0 0 20 20"
                fill="none"
                stroke="currentColor"
                stroke-width="1.5"
                stroke-linecap="round"
                stroke-linejoin="round"
              >
                <path d="M12 5l-5 5 5 5" />
              </svg>
            </button>
            <div class="text-sm font-medium capitalize" data-cal-title></div>
            <button type="button" class="btn-icon" data-cal-next aria-label="Mes siguiente">
              <svg
                aria-hidden="true"
                viewBox="0 0 20 20"
                fill="none"
                stroke="currentColor"
                stroke-width="1.5"
                stroke-linecap="round"
                stroke-linejoin="round"
              >
                <path d="M8 5l5 5-5 5" />
              </svg>
            </button>
          </div>
          <div class="grid grid-cols-7 text-center text-xs font-medium text-slate-500 dark:text-slate-400">
            <div>L</div>
            <div>M</div>
            <div>X</div>
            <div>J</div>
            <div>V</div>
            <div>S</div>
            <div>D</div>
          </div>
          <div class="mt-2 grid grid-cols-7 gap-1" data-calendar-grid></div>
          <div class="mt-3 text-xs text-slate-600 dark:text-slate-300" data-selected-info></div>
        </div>

        <p class="hidden text-sm text-red-600" data-form-error role="alert"></p>
        <div class="flex justify-end gap-2">
          <button type="button" class="btn-outline" data-cancel>Cancelar</button>
          <button type="submit" class="btn" data-submit>Guardar</button>
        </div>
      </form>
    </div>
  </div>

  <div class="mt-6 flex gap-2 print:hidden">
    <button class="btn" type="button" data-print>Exportar a PDF</button>
  </div>

  <script type="module" src={weekModalScript}></script>
</BaseLayout>
